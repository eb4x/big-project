---
- name: configure dnsmasq on router
  hosts:
    - provisioner
    - uio-provisioner
  become: true

  pre_tasks:
    - name: install python packages
      delegate_to: localhost
      become: false
      pip:
        extra_args: '--user'
        name:
          - netaddr

    - name: Get service facts
      service_facts:
    - set_fact:
        firewalld_is_running: "{{ ansible_facts.services['firewalld.service'].state == 'running' }}"

  tasks:
    - name: install dnsmasq
      package:
        name: dnsmasq

    - name: Create dns entries needed by provisioner
      lineinfile:
        path: /etc/hosts
        regexp: ".*{{ item.name }}.{{ cluster_domain }}.*"
        line: "{{ item.address }} {{ item.name }}.{{ cluster_domain }}"
      loop:
        - name: api
          address: "{{ baremetal_network_ipv4_cidr | default('10.0.0.0/16') | ansible.utils.ipaddr('127') | ansible.utils.ipaddr('address') }}"
        - name: mirror-registry
          address: 127.0.0.1

    - name: Dump specialized okd configuration for dnsmasq
      template:
        src: dnsmasq-okd.conf.j2
        dest: /etc/dnsmasq.d/okd.conf
        mode: '0644'
      vars:
        use_dhcpv6: "{{ enable_ipv6 | default(false) }}"
        interface_list: "{{ ansible_facts.interfaces | map('replace', '-', '_') | map('extract', ansible_facts) }}"
        interfaces_with_ipv4: "{{ interface_list | selectattr('ipv4', 'defined') }}"
        interfaces_with_ipv6: "{{ interface_list | selectattr('ipv6', 'defined') }}"
        ipv4_addresses: "{{ interfaces_with_ipv4 | map(attribute='ipv4.address') }}"
        ipv6_addresses: "{{ interfaces_with_ipv6 | map(attribute='ipv6') | flatten | map(attribute='address') }}"
        listen_ipv4_address: "{{ ipv4_addresses | ansible.utils.ipaddr(baremetal_network_ipv4_cidr | default('10.0.0.0/16')) | first }}"
        listen_ipv6_address: "{{ ipv6_addresses | ansible.utils.ipaddr(baremetal_network_ipv6_cidr | default('fd00::/64')) | first }}"
      notify: restart dnsmasq

    - name: Open for business
      when: firewalld_is_running | default(true)
      ansible.posix.firewalld:
        service: "{{ item.service }}"
        state: "{{ item.state | default('enabled') }}"
        immediate: true
        permanent: true
      loop:
        - service: dhcp
        - service: dhcpv6
          state: "{{ enable_ipv6 | default(false) | ternary('enabled', 'disabled') }}"
        - service: dns

    - name: Flush handlers
      meta: flush_handlers

    - name: ensure dnsmasq is running
      service:
        name: dnsmasq
        state: started

  handlers:
    - name: restart dnsmasq
      service:
        name: dnsmasq
        state: restarted

- name: install openshift tools to localhost
  hosts:
    - localhost
  tasks:
    - name: import okd-provisioner/get-release-version
      import_role:
        name: okd-provisioner
        tasks_from: get-release-version
    - name: import okd-provisioner/tools
      import_role:
        name: okd-provisioner
        tasks_from: tools

- name: setup okd baremetal provisioner
  hosts:
    - provisioner
    - uio-provisioner

  pre_tasks:
    - name: Get service facts
      service_facts:
    - set_fact:
        firewalld_is_running: "{{ ansible_facts.services['firewalld.service'].state == 'running' }}"

  roles:
    - okd-provisioner

# root@api-int (172.22.0.2)

# /var/lib/containers/storage/volumes/ironic/_data/html
# console=tty1 console=ttyS0,115200n8

# curl http://172.22.0.2:6385
# /etc/containers/registries.conf.d/mirrors.conf
# [[registry]]
# prefix="quay.io"
# location="mirror-registry.openshift-utv.uio.no:8443/mirrors/quay.io"

# podman run -ti --rm --entrypoint /bin/bash -v /opt/metal3/auth/clouds.yaml:/clouds.yaml:Z -e OS_CLOUD=metal3-bootstrap quay.io/metal3-io/ironic-client

# registry.access.redhat.com/redhat/community-operator-index:v4.13
# podman build -t mirror-registry.openshift-utv.uio.no:8443/bundles/kubernetes-nmstate-operator-bundle:v0.79.0 -f bundle.Dockerfile .
# podman push mirror-registry.openshift-utv.uio.no:8443/bundles/kubernetes-nmstate-operator-bundle:v0.79.0
# opm alpha bundle validate --tag mirror-registry.openshift-utv.uio.no:8443/bundles/kubernetes-nmstate-operator-bundle:latest --image-builder podman

# podman build . -f cool-catalog.Dockerfile -t

# skopeo copy docker://quay.io/operatorhubio/catalog:latest docker://mirror-registry.openshift-utv.uio.no:8443/mirrors/registry.access.redhat.com/redhat/community-operator-index:v4.13
