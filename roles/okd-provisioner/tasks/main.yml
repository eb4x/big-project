---
# https://docs.okd.io/latest/installing/installing_bare_metal_ipi/ipi-install-installation-workflow.html
- name: install packages
  package:
    name: "{{ ansible_package_requirements +
              okd_package_requirements }}"
  become: true

# TODO: EL9 (almalinux) removes /var/run/libvirt/libvirt-sock when
# "not in use" under /usr/lib/systemd/system/libvirtd.socket
#- block:
#    - stat:
#        path: /var/run/libvirt/libvirt-sock
#      register: _stat_libvirt_sock
#    - debug:
#        var: _stat_libvirt_sock
#
#    - name: disable the systemd.socket
#      ansible.builtin.systemd:
#        name: libvirtd.socket
#        enabled: false
#        state: stopped
#        masked: false
#      become: true
#      register: _libvirtd_socket
#
#    - name: enable libvirt
#      ansible.builtin.systemd:
#        name: libvirtd
#        enabled: true
#        state: "{{ (_libvirtd_socket is changed) | ternary('restarted', 'started') }}"
#      become: true
#  tags:
#    - libvirt

# FIXME: this currently breaks the network, maybe look into nmstate?
#- import_tasks: network.yml

- import_tasks: user.yml
- import_tasks: mirror-registry.yml

- name: get release_version for ocp
  block:
    - name: query ocp/stable/release.txt for latest stable version
      uri:
        url: https://mirror.openshift.com/pub/openshift-v4/x86_64/clients/ocp/{{ ocp_version | default('stable') }}/release.txt
        return_content: true
      environment: "{{ hostvars[inventory_hostname].environment | default({}) }}"
      register: _ocp_release

    - name: set_fact ocp_version
      set_fact:
        ocp_version: "{{ _ocp_release.content | regex_search(q_release_version, '\\1') | first }}"
      vars:
        q_release_version: "Name:\\s+(.*)"

    - name: set_fact release_version
      when:
        - use_ocp
        - release_version is not defined
      set_fact:
        release_pull: "{{ _ocp_release.content | regex_search(q_pull_from, '\\1') | first }}"
        release_version: "{{ _ocp_release.content | regex_search(q_release_version, '\\1') | first }}"
      vars:
        q_pull_from: "Pull [Ff]rom:\\s+(.*)"
        q_release_version: "Name:\\s+(.*)"

- name: get release_version for okd
  when:
    - not use_ocp
    - release_version is not defined
  block:
    - name: query origin-release api for latest 4-stable version
      uri:
        url: https://amd64.origin.releases.ci.openshift.org/api/v1/releasestream/4-stable/latest
        return_content: true
      register: _latest
      environment: "{{ hostvars[inventory_hostname].environment | default({}) }}"

    - name: set_fact release_version
      set_fact:
        release_version: "{{ _latest.json.name }}"

- name: "push {{ release_name }}:{{ release_version }} to mirror-registry"
  when: use_mirror_registry | default(true)
  environment: "{{ hostvars[inventory_hostname].environment | default({}) }}"
  block:
    - name: create ocp registry login
      when: use_ocp
      containers.podman.podman_login:
        authfile: "{{ mirror_registry_authfile }}"
        username: "{{ ocp_credentials.auths[registry].auth | b64decode | split(':') | first }}"
        password: "{{ ocp_credentials.auths[registry].auth | b64decode | split(':') | last }}"
        registry: "{{ registry }}"
      vars:
        ocp_credentials: "{{ lookup('file', 'pull-secret-ocp.json') | from_json }}"
      loop:
        - quay.io
      loop_control:
        loop_var: registry

    - name: mirror {{ release_name }}:{{ release_version }}
      command: >-
        oc adm release mirror -a {{ mirror_registry_authfile }}
          --from={{ release_pull }}
          --to={{ mirror_registry_fqdn }}:8443/mirrors/{{ release_registry }}/{{ release_repo }}/{{ release_name }}
          --to-release-image={{ mirror_registry_fqdn }}:8443/mirrors/{{ release_registry }}/{{ release_repo }}/{{ release_name }}:{{ release_version }}
          --insecure
      register: _oc_adm_release_mirror
  always:
    - name: take a big release-mirror dump on the screen
      debug:
        msg: "{{ _oc_adm_release_mirror[item].split('\n') }}"
      when: _oc_adm_release_mirror is defined
      loop:
        - stdout
        - stderr

- import_tasks: tools.yml
  tags:
    - tools

- import_tasks: install.yml
