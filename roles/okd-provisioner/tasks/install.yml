---
- name: create needed directories (if missing)
  file:
    state: directory
    path: "{{ item.path }}"
    mode: "{{ item.mode | default(omit) }}"
  with_items:
    - path: "{{ coreos_image_cache_directory }}"
    - path: "{{ installation_directory }}"
  tags:
    - config
    - install-config.yaml
    # sudo semanage fcontext -a -t httpd_sys_content_t "/home/kni/rhcos_image_cache(/.*)?"
    # sudo restorecon -Rv /home/kni/rhcos_image_cache/

# https://docs.openshift.com/container-platform/4.12/installing/installing_bare_metal_ipi/ipi-install-installation-workflow.html#ipi-install-creating-an-rhcos-images-cache_ipi-install-installation-workflow
- name: populate coreos_image_cache_directory
  when: use_coreos_image_cache | default(false)
  tags:
    - coreos_image_cache
  block:
    - name: coreos print-stream-json
      command: openshift-baremetal-install coreos print-stream-json
      changed_when: false
      register: _coreos
      tags:
        - config

    - name: create _coreos_meta fact
      set_fact:
        _coreos_meta: "{{ (_coreos.stdout | from_json).architectures.x86_64.artifacts.qemu.formats | json_query('*.disk | [0]') }}"
      tags:
        - config

    - name: Check for decompressed qcow2 image in image cache directory
      stat:
        path: "{{ coreos_image_cache_directory }}/{{ _coreos_meta.location | basename | splitext | first }}"
        checksum: sha256
      register: _coreos

    - name: download qemu image for bootstrap
      when:
        - not _coreos.stat.exists or
          _coreos.stat.checksum != _coreos_meta['uncompressed-sha256']
      get_url:
        url: "{{ _coreos_meta.location }}"
        checksum: "sha256:{{ _coreos_meta['sha256'] }}"
        dest: "{{ coreos_image_cache_directory }}/{{ _coreos_meta.location | basename }}"
      environment: "{{ hostvars[inventory_hostname].environment | default({}) }}"

    - name: decompress gz image
      when:
        - not _coreos.stat.exists or
          _coreos.stat.checksum != _coreos_meta['uncompressed-sha256']
        - (_coreos_meta.location | basename | splitext | last) == '.gz'
      command: "gunzip --decompress {{ coreos_image_cache_directory }}/{{ _coreos_meta.location | basename }}"
      args:
        creates: "{{ coreos_image_cache_directory }}/{{ _coreos_meta.location | basename | splitext | first }}"

    - name: decompress xz image
      when:
        - not _coreos.stat.exists or
          _coreos.stat.checksum != _coreos_meta['uncompressed-sha256']
        - (_coreos_meta.location | basename | splitext | last) == '.xz'
      command: "xz --decompress {{ coreos_image_cache_directory }}/{{ _coreos_meta.location | basename }}"
      args:
        creates: "{{ coreos_image_cache_directory }}/{{ _coreos_meta.location | basename | splitext | first }}"

- name: get mirror-registry cert
  slurp:
    path: "{{ mirror_registry_quayroot }}/quay-rootCA/rootCA.pem"
  register: _mirror_registry_ca
  tags:
    - config
    - install-config.yaml

- name: "create {{ installation_directory }}/install-config.yaml"
  template:
    src: install-config.yaml.j2
    dest: "{{ installation_directory }}/install-config.yaml"
  vars:
    ssh_key: "{{ _ssh_key.public_key }}"
    mirror_registry_ca: "{{ _mirror_registry_ca.content | b64decode | trim }}"
    openshift_install_version: "{{ (lookup('pipe', 'openshift-install version') | regex_search('openshift-install (?P<version>\\d+\\.\\d+).', '\\g<version>'))[0] }}"
  tags:
    - config
    - install-config.yaml

- command: openshift-baremetal-install --dir clusterconfigs create manifests
  tags:
    - config

# https://github.com/openshift/cluster-network-operator#configuring-ipsec-with-ovnkubernetes-at-runtime
# https://docs.openshift.com/container-platform/4.11/networking/ovn_kubernetes_network_provider/configuring-ipsec-ovn.html
# https://docs.openshift.com/container-platform/4.11/networking/changing-cluster-network-mtu.html#mtu-value-selection_changing-cluster-network-mtu
- name: enable ipsec
  copy:
    content: |
      ---
      apiVersion: operator.openshift.io/v1
      kind: Network
      metadata:
        name: cluster
      spec:
        defaultNetwork:
          type: OVNKubernetes
          ovnKubernetesConfig:
            mtu: {{ 1500 - (ovnkubernetes_overhead + ipsec_overhead) }}
            ipsecConfig: {}
    dest: "{{ installation_directory }}/manifests/cluster-network-03-config.yml"
    mode: '0644'
  vars:
    ovnkubernetes_overhead: 100
    ipsec_overhead: 46
  tags:
    - config

- name: override ntp
  copy:
    content: |
      ---
      apiVersion: machineconfiguration.openshift.io/v1
      kind: MachineConfig
      metadata:
        name: 99-{{ role }}-chrony-conf-override
        labels:
          machineconfiguration.openshift.io/role: {{ role }}
      spec:
        config:
          ignition:
            version: 3.2.0
          storage:
            files:
              - filesystem: root
                path: /etc/chrony.conf
                contents:
                  source: "data:text/plain;base64,{{ chrony_conf | b64encode }}"
                mode: 420
                overwrite: true
    dest: "{{ installation_directory }}/manifests/99-{{ role }}-chrony-conf-override.yaml"
    mode: '0644'
  vars:
    chrony_conf: "{{ lookup('template', 'chrony.conf.j2') }}"
  loop: [master, worker]
  loop_control:
    loop_var: role
  tags:
    - config

- name: enable mirror registries
  copy:
    content: |
      ---
      apiVersion: machineconfiguration.openshift.io/v1
      kind: MachineConfig
      metadata:
        name: 99-{{ role }}-mirror-registries
        labels:
          machineconfiguration.openshift.io/role: {{ role }}
      spec:
        config:
          ignition:
            version: 3.2.0
          storage:
            files:
              - filesystem: root
                path: /etc/containers/registries.conf.d/99-mirror-registries.conf
                contents:
                  source: "data:text/plain;charset=utf-8;base64,{{ mirror_registries_conf | b64encode }}"
                mode: 420
    dest: "{{ installation_directory }}/manifests/99-{{ role }}-mirror-registries.yaml"
    mode: '0644'
  vars:
    mirror_registries_conf: "{{ lookup('template', 'mirror-registries.conf.j2') }}"
  loop: [master, worker]
  loop_control:
    loop_var: role
  tags:
    - config

#- command: TF_LOG=trace openshift-baremetal-install --dir={{ installation_directory }} create cluster
